syntax = "proto3";

package user_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "validate/validate.proto";

option go_package = "github.com/kom1ssar/grpc-auth/pkg/user_v1;user_v1";

enum UserRole{
  USER = 0;
  ADMIN = 1;
}


service UserV1 {
  rpc Create(CreateUserRequest) returns (CreateUserResponse);
  rpc Get(GetUserRequest) returns (GetUserResponse);
  rpc Update(UpdateUserRequest) returns (google.protobuf.Empty);
  rpc Delete(DeleteUserRequest) returns (google.protobuf.Empty);

}


message User {
  int64 id = 1;
  string name = 2;
  string email = 3;
  UserRole role = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message UserToCreate {
  string name = 1 [(validate.rules).string = {min_len: 3, max_len: 50}];
  string email = 2 [(validate.rules).string.email = true];
  string password = 3 [(validate.rules).string = {min_len: 5, max_len: 50}];
  string password_confirm = 4 [(validate.rules).string = {min_len: 5, max_len: 50}];
}

message CreateUserRequest {
 UserToCreate user = 1;
}

message CreateUserResponse {
  int64 id = 1;
}

message GetUserRequest {
  int64 id = 1 [(validate.rules).int64.gte = 1];
}

message GetUserResponse {
  int64 id = 1;
  string name = 2;
  string email = 3;
  UserRole role = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}


message UpdateUserRequest {
  int64 id = 1 [(validate.rules).int64.gte = 1];
  google.protobuf.StringValue name = 2 [(validate.rules).string = {min_len: 3, max_len: 50}];
  google.protobuf.StringValue email = 3 [(validate.rules).string.email = true];
}

message DeleteUserRequest {
  int64 id = 1 [(validate.rules).int64.gte = 1];
}